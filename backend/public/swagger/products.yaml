paths:
  /products:
    get:
      tags:
        - Products
      summary: Get a list of Products from the Database.
      description: Returns a list of Products with their associated Entitlements.
      operationId: getProducts
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/Product"
        "400":
          description: Invalid credentials supplied
        "404":
          description: Resource not found
        "405":
          description: Validation exception
    post:
      tags:
        - Products
      summary: Post a new Product to the Database.
      description: Posts a new Product with their associated Entitlements.
      operationId: postProduct
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/Product"
        "400":
          description: Invalid credentials supplied
        "404":
          description: Resource not found
        "405":
          description: Validation exception
  /products/{id}:
    get:
      tags:
        - Products
      summary: Finds Product by ID
      description: Returns a Members information based on their Entitlements ID.
      operationId: findProductById
      parameters:
        - name: id
          in: path
          description: Unique ID for the Member within the Entitlement Service
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/definitions/ProductAll"
        "400":
          description: Invalid status value
        "404":
          description: Member not found
    put:
      tags:
        - Products
      summary: Updates a Product by ID
      description: Returns a Product's information based on the Product ID.
      operationId: updateProductById
      parameters:
        - name: id
          in: path
          description: Unique ID for the Member within the Entitlement Service
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/definitions/ProductAll"
        "400":
          description: Invalid status value
        "404":
          description: Member not found
    delete:
      tags:
        - Products
      summary: Deletes Product by ID
      description: Sets a Product to in active based on the Product ID.
      operationId: findProductById
      parameters:
        - name: id
          in: path
          description: Unique ID for the Member within the Entitlement Service
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/definitions/Product"
        "400":
          description: Invalid status value
        "404":
          description: Member not found     
definitions:
  ProductPost:
  ProductAll:
    allOf:
      - $ref: '#/definitions/Product'
      - type: object
        properties:
          entitlements:
            description: An array of associated Entitlements.
            type: array
            items:
              $ref: "#/definitions/Entitlement" 
  Product:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Unique integer ID for the Product within the Entitlement Service.
        example: 10
      payment_id:
        type: string
        example: prod_O3FvulwP4Ce2R9
        description: Unique identifier generated by the Payment Partner
      price_id: 
        type: string
        example: price_1NepevIxCEK2HtGeQCpMzsH
        description: Unique identifier for the price object generated by the Payment Partner.(If Applicable)
      payment_processor:
        type: string
        maximum: 32
        description: Friendly name for the payment processor where the billable product was generated.
        example: Stripe
      name:
        type: string
        maximum: 256
        minimum: 4
        description: Friendly name for the Product.
        example: All in One
      description:
        type: string
        maximum: 256
        minimum: 4
        description: A friendly description of the Product and the benefits included.
        example: An all inclusive package that has it all.  Ad free music, exclusive content and much, much more.
      price:
        type: number
        format: float
        description: The float value of the price for the billable Product.
        example: 10.99
      is_active:
        type: boolean
        description: To determine if the Product is active within the Entitlement Service.
      is_internal:
        type: boolean
        description: Defines if the Product has a corosponding payment processor billable product.
      start_date:
        type: string
        format: date-time
        example: 2023-08-10
        description: The date the Product was added to the Entitlement Service.
      end_date:
        type: string
        format: date-time
        example: 2024-08-10
        description: The date the Product was 'removed' from the Entitlement Service.
        nullable: true